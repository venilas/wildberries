version: "3.9"
services:
  bot:
    build:
      context: .
      dockerfile: docker/bot.Dockerfile
    container_name: telegram_bot
    env_file:
      - .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    depends_on:
      - db
      - api
    networks:
      - bot_network
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    container_name: api
    ports:
      - "8080:8000"
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      - db
    networks:
      - bot_network
    command: uvicorn run:app --host 0.0.0.0 --port 8000
  db:
    image: postgres:17
    container_name: database
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5437:5432"
    networks:
      - bot_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data:
